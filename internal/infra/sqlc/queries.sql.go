// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.0
// source: queries.sql

package sqlc

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createTodo = `-- name: CreateTodo :one
INSERT INTO todos (
    id, title, description, done, priority, due_date, auth0_id
) VALUES (
             $1, $2, $3, $4, $5, $6, $7
         )
    RETURNING id, title, description, done, priority, due_date, auth0_id, created_at, updated_at
`

type CreateTodoParams struct {
	ID          uuid.UUID  `json:"id"`
	Title       string     `json:"title"`
	Description *string    `json:"description"`
	Done        bool       `json:"done"`
	Priority    string     `json:"priority"`
	DueDate     *time.Time `json:"due_date"`
	Auth0ID     string     `json:"auth0_id"`
}

func (q *Queries) CreateTodo(ctx context.Context, arg CreateTodoParams) (*Todo, error) {
	row := q.db.QueryRow(ctx, createTodo,
		arg.ID,
		arg.Title,
		arg.Description,
		arg.Done,
		arg.Priority,
		arg.DueDate,
		arg.Auth0ID,
	)
	var i Todo
	err := row.Scan(
		&i.ID,
		&i.Title,
		&i.Description,
		&i.Done,
		&i.Priority,
		&i.DueDate,
		&i.Auth0ID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return &i, err
}
